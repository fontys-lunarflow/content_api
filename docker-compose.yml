services:
    # java container
    content_api:
        container_name: content_api
        build:
            context: src/main/docker
            dockerfile: Dockerfile.dev
            # context: .
            # dockerfile: src/main/docker/Dockerfile.jvm-multistage
        ports:
            - "5000:8080"
        environment:
            KC_URL: ${KC_URL:?Missing Keycloak URL}
            KC_CLIENT_ID: ${KC_CLIENT_ID:?Missing Keycloak client id}
            KC_CLIENT_SECRET: ${KC_CLIENT_SECRET:?Missing Keycloak client secret}
        restart: always
        volumes:
            - ./:/work/
        command: ["./mvnw", "quarkus:dev"]
        depends_on:
            - db

    # database
    db:
        container_name: db
        image: postgres:17
        ports:
            - 5432:5432
        volumes:
            # data persistence
            - ./volumes/postgres:/var/lib/postgresql/data
            # init script
            # - ./docker/postgres:/docker-entrypoint-initdb.d
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        healthcheck:
            test: pg_isready -d postgres -U postgres
            interval: 5s
            timeout: 5s
            retries: 6

    mq:
        container_name: rabbitmq
        image: rabbitmq:4-management
        ports:
            - 15672:15672
        volumes:
            - ./volumes/rabbitmq:/var/lib/rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: admin
            RABBITMQ_DEFAULT_PASS: admin
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 5s
            timeout: 5s
            retries: 6


    # pgadmin
    # pgadmin:
    #     image: dpage/pgadmin4
    #     container_name: pgadmin4_container
    #     restart: always
    #     ports:
    #         - "8888:80"
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: admin@admin.com
    #         PGADMIN_DEFAULT_PASSWORD: password
    #     volumes:
    #         - ./volumes/pgadmin:/var/lib/pgadmin
    #     depends_on:
    #         - db